
//-----------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using UnityEngine.Scripting;
using Unity.Services.Authentication.Server.Shared;

namespace Unity.Services.Authentication.Server.Environments.Generated
{
    /// <summary>
    /// EnvironmentResponse
    /// </summary>
    [DataContract(Name = "EnvironmentResponse")]
    [Preserve]
    internal partial class EnvironmentResponse
    {
        /// <summary>
        /// ID of the environment
        /// </summary>
        /// <value>ID of the environment</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        [Preserve]
        public string Id { get; set; }

        /// <summary>
        /// ID of the project
        /// </summary>
        /// <value>ID of the project</value>
        [DataMember(Name = "projectId", EmitDefaultValue = false)]
        [Preserve]
        public string ProjectId { get; set; }

        /// <summary>
        /// Name of the environment
        /// </summary>
        /// <value>Name of the environment</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        [Preserve]
        public string Name { get; set; }

        /// <summary>
        /// Indicates if the environment is the default environment for the project
        /// </summary>
        /// <value>Indicates if the environment is the default environment for the project</value>
        [DataMember(Name = "isDefault", EmitDefaultValue = true)]
        [Preserve]
        public bool IsDefault { get; set; }

        /// <summary>
        /// UTC date and time describing when the entity was created
        /// </summary>
        /// <value>UTC date and time describing when the entity was created</value>
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        [Preserve]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// UTC date and time describing when the entity was last updated
        /// </summary>
        /// <value>UTC date and time describing when the entity was last updated</value>
        [DataMember(Name = "updatedAt", EmitDefaultValue = false)]
        [Preserve]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// UTC date and time describing when the entity was last archived (null if not archived)
        /// </summary>
        /// <value>UTC date and time describing when the entity was last archived (null if not archived)</value>
        [DataMember(Name = "archivedAt", EmitDefaultValue = true)]
        [Preserve]
        public DateTime? ArchivedAt { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="EnvironmentResponse" /> class.
        /// </summary>
        /// <param name="id">ID of the environment.</param>
        /// <param name="projectId">ID of the project.</param>
        /// <param name="name">Name of the environment.</param>
        /// <param name="isDefault">Indicates if the environment is the default environment for the project.</param>
        /// <param name="createdAt">UTC date and time describing when the entity was created.</param>
        /// <param name="updatedAt">UTC date and time describing when the entity was last updated.</param>
        /// <param name="archivedAt">UTC date and time describing when the entity was last archived (null if not archived).</param>
        [Preserve]
        public EnvironmentResponse(string id = default(string), string projectId = default(string), string name = default(string), bool isDefault = default(bool), DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime), DateTime? archivedAt = default(DateTime?))
        {
            this.Id = id;
            this.ProjectId = projectId;
            this.Name = name;
            this.IsDefault = isDefault;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.ArchivedAt = archivedAt;
        }
    }

}
